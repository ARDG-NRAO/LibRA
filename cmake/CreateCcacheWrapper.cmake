# CreateCcacheWrapper.cmake - Create ccache wrapper for nvcc_wrapper
# This script is called after Kokkos installation to create a ccache-enabled nvcc_wrapper

# Find ccache
find_program(CCACHE_PROGRAM ccache)
if(NOT CCACHE_PROGRAM)
    message(STATUS "ccache not found - skipping ccache wrapper creation")
    return()
endif()

# Set paths (these should match the main CMakeLists.txt)
if(NOT DEFINED INSTALL_DIR)
    set(INSTALL_DIR "${CMAKE_SOURCE_DIR}/install")
endif()

set(ORIGINAL_NVCC_WRAPPER "${INSTALL_DIR}/bin/kokkos/nvcc_wrapper")
set(CCACHE_NVCC_WRAPPER "${INSTALL_DIR}/bin/kokkos/ccache_nvcc_wrapper")

# Check if original nvcc_wrapper exists
if(NOT EXISTS "${ORIGINAL_NVCC_WRAPPER}")
    message(FATAL_ERROR "Original nvcc_wrapper not found at: ${ORIGINAL_NVCC_WRAPPER}")
endif()

message(STATUS "Creating ccache wrapper for nvcc_wrapper...")
message(STATUS "  Original: ${ORIGINAL_NVCC_WRAPPER}")
message(STATUS "  Wrapper:  ${CCACHE_NVCC_WRAPPER}")
message(STATUS "  ccache:   ${CCACHE_PROGRAM}")

# Create ccache wrapper script for nvcc_wrapper
file(WRITE "${CCACHE_NVCC_WRAPPER}" "#!/bin/bash\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "# ccache wrapper for Kokkos nvcc_wrapper\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "# Generated by CreateCcacheWrapper.cmake\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "# Set ccache environment for CUDA builds\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "export CCACHE_LOGFILE=\"${INSTALL_DIR}/ccache_nvcc.log\"\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "export CCACHE_COMPILERCHECK=content\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "export CCACHE_SLOPPINESS=\"file_macro,time_macros,include_file_mtime\"\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "# Debug output (uncomment for debugging)\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "# echo \"ccache nvcc_wrapper called with: $@\" >> ${INSTALL_DIR}/ccache_nvcc_debug.log\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "# Execute ccache with original nvcc_wrapper\n")
file(APPEND "${CCACHE_NVCC_WRAPPER}" "exec \"${CCACHE_PROGRAM}\" \"${ORIGINAL_NVCC_WRAPPER}\" \"$@\"\n")

# Make executable
execute_process(
    COMMAND chmod +x "${CCACHE_NVCC_WRAPPER}"
    RESULT_VARIABLE CHMOD_RESULT
)

if(CHMOD_RESULT EQUAL 0)
    message(STATUS "Successfully created ccache nvcc_wrapper at: ${CCACHE_NVCC_WRAPPER}")
else()
    message(FATAL_ERROR "Failed to make ccache nvcc_wrapper executable")
endif()

# Test the wrapper
execute_process(
    COMMAND "${CCACHE_NVCC_WRAPPER}" --version
    OUTPUT_VARIABLE WRAPPER_TEST
    ERROR_VARIABLE WRAPPER_ERROR
    RESULT_VARIABLE WRAPPER_RESULT
)

if(WRAPPER_RESULT EQUAL 0)
    message(STATUS "ccache nvcc_wrapper test successful")
else()
    message(WARNING "ccache nvcc_wrapper test failed: ${WRAPPER_ERROR}")
endif()